// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/Stymphalian/ikuaki/api/protos/ikuaki.proto

/*
Package Stymphalian_ikuaki_api_protos is a generated protocol buffer package.

It is generated from these files:
	github.com/Stymphalian/ikuaki/api/protos/ikuaki.proto

It has these top-level messages:
	CreateWorldReq
	CreateWorldRes
	CreateAgentReq
	CreateAgentRes
	AgentId
	Empty
	EnterReq
	EnterRes
	ExitReq
	ExitRes
	InformReq
	InformRes
	UpdateRes
	UpdateReq
*/
package Stymphalian_ikuaki_api_protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import Stymphalian_ikuaki_api_protosfat "github.com/Stymphalian/ikuaki/api/protosfat"
import grpc_reflection_v1alpha "google.golang.org/grpc/reflection/grpc_reflection_v1alpha"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateWorldReq struct {
	Name string                                           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Fat  *Stymphalian_ikuaki_api_protosfat.Fat            `protobuf:"bytes,2,opt,name=fat" json:"fat,omitempty"`
	Re   *grpc_reflection_v1alpha.ServerReflectionRequest `protobuf:"bytes,3,opt,name=re" json:"re,omitempty"`
	Last string                                           `protobuf:"bytes,4,opt,name=last" json:"last,omitempty"`
}

func (m *CreateWorldReq) Reset()                    { *m = CreateWorldReq{} }
func (m *CreateWorldReq) String() string            { return proto.CompactTextString(m) }
func (*CreateWorldReq) ProtoMessage()               {}
func (*CreateWorldReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateWorldReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateWorldReq) GetFat() *Stymphalian_ikuaki_api_protosfat.Fat {
	if m != nil {
		return m.Fat
	}
	return nil
}

func (m *CreateWorldReq) GetRe() *grpc_reflection_v1alpha.ServerReflectionRequest {
	if m != nil {
		return m.Re
	}
	return nil
}

func (m *CreateWorldReq) GetLast() string {
	if m != nil {
		return m.Last
	}
	return ""
}

type CreateWorldRes struct {
	Addr string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
}

func (m *CreateWorldRes) Reset()                    { *m = CreateWorldRes{} }
func (m *CreateWorldRes) String() string            { return proto.CompactTextString(m) }
func (*CreateWorldRes) ProtoMessage()               {}
func (*CreateWorldRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateWorldRes) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type CreateAgentReq struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CreateAgentReq) Reset()                    { *m = CreateAgentReq{} }
func (m *CreateAgentReq) String() string            { return proto.CompactTextString(m) }
func (*CreateAgentReq) ProtoMessage()               {}
func (*CreateAgentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateAgentReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateAgentRes struct {
	AgentId *AgentId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Addr    string   `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
}

func (m *CreateAgentRes) Reset()                    { *m = CreateAgentRes{} }
func (m *CreateAgentRes) String() string            { return proto.CompactTextString(m) }
func (*CreateAgentRes) ProtoMessage()               {}
func (*CreateAgentRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateAgentRes) GetAgentId() *AgentId {
	if m != nil {
		return m.AgentId
	}
	return nil
}

func (m *CreateAgentRes) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type AgentId struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *AgentId) Reset()                    { *m = AgentId{} }
func (m *AgentId) String() string            { return proto.CompactTextString(m) }
func (*AgentId) ProtoMessage()               {}
func (*AgentId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AgentId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type EnterReq struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *EnterReq) Reset()                    { *m = EnterReq{} }
func (m *EnterReq) String() string            { return proto.CompactTextString(m) }
func (*EnterReq) ProtoMessage()               {}
func (*EnterReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *EnterReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EnterRes struct {
}

func (m *EnterRes) Reset()                    { *m = EnterRes{} }
func (m *EnterRes) String() string            { return proto.CompactTextString(m) }
func (*EnterRes) ProtoMessage()               {}
func (*EnterRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ExitReq struct {
}

func (m *ExitReq) Reset()                    { *m = ExitReq{} }
func (m *ExitReq) String() string            { return proto.CompactTextString(m) }
func (*ExitReq) ProtoMessage()               {}
func (*ExitReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type ExitRes struct {
}

func (m *ExitRes) Reset()                    { *m = ExitRes{} }
func (m *ExitRes) String() string            { return proto.CompactTextString(m) }
func (*ExitRes) ProtoMessage()               {}
func (*ExitRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type InformReq struct {
	AgentName string `protobuf:"bytes,1,opt,name=AgentName" json:"AgentName,omitempty"`
	Text      string `protobuf:"bytes,2,opt,name=Text" json:"Text,omitempty"`
}

func (m *InformReq) Reset()                    { *m = InformReq{} }
func (m *InformReq) String() string            { return proto.CompactTextString(m) }
func (*InformReq) ProtoMessage()               {}
func (*InformReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *InformReq) GetAgentName() string {
	if m != nil {
		return m.AgentName
	}
	return ""
}

func (m *InformReq) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type InformRes struct {
	Text string `protobuf:"bytes,1,opt,name=Text" json:"Text,omitempty"`
}

func (m *InformRes) Reset()                    { *m = InformRes{} }
func (m *InformRes) String() string            { return proto.CompactTextString(m) }
func (*InformRes) ProtoMessage()               {}
func (*InformRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *InformRes) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type UpdateRes struct {
	Text string `protobuf:"bytes,1,opt,name=Text" json:"Text,omitempty"`
}

func (m *UpdateRes) Reset()                    { *m = UpdateRes{} }
func (m *UpdateRes) String() string            { return proto.CompactTextString(m) }
func (*UpdateRes) ProtoMessage()               {}
func (*UpdateRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *UpdateRes) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type UpdateReq struct {
	Text string `protobuf:"bytes,1,opt,name=Text" json:"Text,omitempty"`
}

func (m *UpdateReq) Reset()                    { *m = UpdateReq{} }
func (m *UpdateReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateReq) ProtoMessage()               {}
func (*UpdateReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *UpdateReq) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateWorldReq)(nil), "Stymphalian.ikuaki.api.protos.CreateWorldReq")
	proto.RegisterType((*CreateWorldRes)(nil), "Stymphalian.ikuaki.api.protos.CreateWorldRes")
	proto.RegisterType((*CreateAgentReq)(nil), "Stymphalian.ikuaki.api.protos.CreateAgentReq")
	proto.RegisterType((*CreateAgentRes)(nil), "Stymphalian.ikuaki.api.protos.CreateAgentRes")
	proto.RegisterType((*AgentId)(nil), "Stymphalian.ikuaki.api.protos.AgentId")
	proto.RegisterType((*Empty)(nil), "Stymphalian.ikuaki.api.protos.Empty")
	proto.RegisterType((*EnterReq)(nil), "Stymphalian.ikuaki.api.protos.EnterReq")
	proto.RegisterType((*EnterRes)(nil), "Stymphalian.ikuaki.api.protos.EnterRes")
	proto.RegisterType((*ExitReq)(nil), "Stymphalian.ikuaki.api.protos.ExitReq")
	proto.RegisterType((*ExitRes)(nil), "Stymphalian.ikuaki.api.protos.ExitRes")
	proto.RegisterType((*InformReq)(nil), "Stymphalian.ikuaki.api.protos.InformReq")
	proto.RegisterType((*InformRes)(nil), "Stymphalian.ikuaki.api.protos.InformRes")
	proto.RegisterType((*UpdateRes)(nil), "Stymphalian.ikuaki.api.protos.UpdateRes")
	proto.RegisterType((*UpdateReq)(nil), "Stymphalian.ikuaki.api.protos.UpdateReq")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Lobby service

type LobbyClient interface {
	CreateWorld(ctx context.Context, in *CreateWorldReq, opts ...grpc.CallOption) (*CreateWorldRes, error)
	CreateAgent(ctx context.Context, in *CreateAgentReq, opts ...grpc.CallOption) (*CreateAgentRes, error)
}

type lobbyClient struct {
	cc *grpc.ClientConn
}

func NewLobbyClient(cc *grpc.ClientConn) LobbyClient {
	return &lobbyClient{cc}
}

func (c *lobbyClient) CreateWorld(ctx context.Context, in *CreateWorldReq, opts ...grpc.CallOption) (*CreateWorldRes, error) {
	out := new(CreateWorldRes)
	err := grpc.Invoke(ctx, "/Stymphalian.ikuaki.api.protos.Lobby/CreateWorld", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyClient) CreateAgent(ctx context.Context, in *CreateAgentReq, opts ...grpc.CallOption) (*CreateAgentRes, error) {
	out := new(CreateAgentRes)
	err := grpc.Invoke(ctx, "/Stymphalian.ikuaki.api.protos.Lobby/CreateAgent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Lobby service

type LobbyServer interface {
	CreateWorld(context.Context, *CreateWorldReq) (*CreateWorldRes, error)
	CreateAgent(context.Context, *CreateAgentReq) (*CreateAgentRes, error)
}

func RegisterLobbyServer(s *grpc.Server, srv LobbyServer) {
	s.RegisterService(&_Lobby_serviceDesc, srv)
}

func _Lobby_CreateWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorldReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Stymphalian.ikuaki.api.protos.Lobby/CreateWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateWorld(ctx, req.(*CreateWorldReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lobby_CreateAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAgentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServer).CreateAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Stymphalian.ikuaki.api.protos.Lobby/CreateAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServer).CreateAgent(ctx, req.(*CreateAgentReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lobby_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Stymphalian.ikuaki.api.protos.Lobby",
	HandlerType: (*LobbyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWorld",
			Handler:    _Lobby_CreateWorld_Handler,
		},
		{
			MethodName: "CreateAgent",
			Handler:    _Lobby_CreateAgent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/Stymphalian/ikuaki/api/protos/ikuaki.proto",
}

// Client API for World service

type WorldClient interface {
	Enter(ctx context.Context, in *EnterReq, opts ...grpc.CallOption) (*EnterRes, error)
	Exit(ctx context.Context, in *ExitReq, opts ...grpc.CallOption) (*ExitRes, error)
	Inform(ctx context.Context, opts ...grpc.CallOption) (World_InformClient, error)
}

type worldClient struct {
	cc *grpc.ClientConn
}

func NewWorldClient(cc *grpc.ClientConn) WorldClient {
	return &worldClient{cc}
}

func (c *worldClient) Enter(ctx context.Context, in *EnterReq, opts ...grpc.CallOption) (*EnterRes, error) {
	out := new(EnterRes)
	err := grpc.Invoke(ctx, "/Stymphalian.ikuaki.api.protos.World/Enter", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *worldClient) Exit(ctx context.Context, in *ExitReq, opts ...grpc.CallOption) (*ExitRes, error) {
	out := new(ExitRes)
	err := grpc.Invoke(ctx, "/Stymphalian.ikuaki.api.protos.World/Exit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *worldClient) Inform(ctx context.Context, opts ...grpc.CallOption) (World_InformClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_World_serviceDesc.Streams[0], c.cc, "/Stymphalian.ikuaki.api.protos.World/Inform", opts...)
	if err != nil {
		return nil, err
	}
	x := &worldInformClient{stream}
	return x, nil
}

type World_InformClient interface {
	Send(*InformReq) error
	Recv() (*InformRes, error)
	grpc.ClientStream
}

type worldInformClient struct {
	grpc.ClientStream
}

func (x *worldInformClient) Send(m *InformReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *worldInformClient) Recv() (*InformRes, error) {
	m := new(InformRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for World service

type WorldServer interface {
	Enter(context.Context, *EnterReq) (*EnterRes, error)
	Exit(context.Context, *ExitReq) (*ExitRes, error)
	Inform(World_InformServer) error
}

func RegisterWorldServer(s *grpc.Server, srv WorldServer) {
	s.RegisterService(&_World_serviceDesc, srv)
}

func _World_Enter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).Enter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Stymphalian.ikuaki.api.protos.World/Enter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).Enter(ctx, req.(*EnterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _World_Exit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).Exit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Stymphalian.ikuaki.api.protos.World/Exit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).Exit(ctx, req.(*ExitReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _World_Inform_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WorldServer).Inform(&worldInformServer{stream})
}

type World_InformServer interface {
	Send(*InformRes) error
	Recv() (*InformReq, error)
	grpc.ServerStream
}

type worldInformServer struct {
	grpc.ServerStream
}

func (x *worldInformServer) Send(m *InformRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *worldInformServer) Recv() (*InformReq, error) {
	m := new(InformReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _World_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Stymphalian.ikuaki.api.protos.World",
	HandlerType: (*WorldServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Enter",
			Handler:    _World_Enter_Handler,
		},
		{
			MethodName: "Exit",
			Handler:    _World_Exit_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Inform",
			Handler:       _World_Inform_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "github.com/Stymphalian/ikuaki/api/protos/ikuaki.proto",
}

// Client API for Agent service

type AgentClient interface {
	// information from the world server
	Update(ctx context.Context, opts ...grpc.CallOption) (Agent_UpdateClient, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) Update(ctx context.Context, opts ...grpc.CallOption) (Agent_UpdateClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Agent_serviceDesc.Streams[0], c.cc, "/Stymphalian.ikuaki.api.protos.Agent/Update", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentUpdateClient{stream}
	return x, nil
}

type Agent_UpdateClient interface {
	Send(*UpdateReq) error
	CloseAndRecv() (*UpdateRes, error)
	grpc.ClientStream
}

type agentUpdateClient struct {
	grpc.ClientStream
}

func (x *agentUpdateClient) Send(m *UpdateReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentUpdateClient) CloseAndRecv() (*UpdateRes, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UpdateRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Agent service

type AgentServer interface {
	// information from the world server
	Update(Agent_UpdateServer) error
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_Update_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).Update(&agentUpdateServer{stream})
}

type Agent_UpdateServer interface {
	SendAndClose(*UpdateRes) error
	Recv() (*UpdateReq, error)
	grpc.ServerStream
}

type agentUpdateServer struct {
	grpc.ServerStream
}

func (x *agentUpdateServer) SendAndClose(m *UpdateRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentUpdateServer) Recv() (*UpdateReq, error) {
	m := new(UpdateReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Stymphalian.ikuaki.api.protos.Agent",
	HandlerType: (*AgentServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Update",
			Handler:       _Agent_Update_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "github.com/Stymphalian/ikuaki/api/protos/ikuaki.proto",
}

func init() {
	proto.RegisterFile("github.com/Stymphalian/ikuaki/api/protos/ikuaki.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0x63, 0x37, 0x1f, 0xcd, 0x44, 0xea, 0x61, 0x4f, 0xc1, 0xe2, 0xa3, 0x5a, 0xf1, 0x91,
	0x0b, 0x76, 0x31, 0x42, 0x1c, 0x00, 0x89, 0x82, 0x52, 0x51, 0x09, 0x71, 0x70, 0x41, 0x20, 0x38,
	0x84, 0x75, 0xbc, 0x76, 0x56, 0xf5, 0x57, 0x76, 0x37, 0x55, 0xf3, 0x3a, 0xbc, 0x02, 0xcf, 0xc4,
	0x7b, 0xa0, 0x5d, 0x3b, 0x76, 0x5a, 0xb5, 0xb1, 0x7b, 0xca, 0x64, 0xf7, 0x37, 0x33, 0xff, 0xd9,
	0xf9, 0xcb, 0xf0, 0x2a, 0x62, 0x72, 0xb1, 0xf2, 0xed, 0x79, 0x96, 0x38, 0x67, 0x72, 0x9d, 0xe4,
	0x0b, 0x12, 0x33, 0x92, 0x3a, 0xec, 0x7c, 0x45, 0xce, 0x99, 0x43, 0x72, 0xe6, 0xe4, 0x3c, 0x93,
	0x99, 0x28, 0x4f, 0x6c, 0xfd, 0x0f, 0x3d, 0xd8, 0x62, 0xed, 0xf2, 0x86, 0xe4, 0xe5, 0xad, 0xb0,
	0xde, 0xb6, 0xad, 0x1a, 0x12, 0xe9, 0x84, 0x44, 0xca, 0x75, 0xb4, 0xc8, 0x84, 0x2c, 0xd2, 0xad,
	0x49, 0xc4, 0xf3, 0xf9, 0x8c, 0xd3, 0x30, 0xa6, 0x73, 0xc9, 0xb2, 0x74, 0x76, 0xf1, 0x82, 0xc4,
	0xf9, 0x82, 0x38, 0xf5, 0x51, 0x41, 0xe2, 0xbf, 0x06, 0x1c, 0x7c, 0xe4, 0x94, 0x48, 0xfa, 0x3d,
	0xe3, 0x71, 0xe0, 0xd1, 0x25, 0x42, 0xd0, 0x4d, 0x49, 0x42, 0xc7, 0xc6, 0xa1, 0x31, 0x19, 0x7a,
	0x3a, 0x46, 0xaf, 0x61, 0x2f, 0x24, 0x72, 0x6c, 0x1e, 0x1a, 0x93, 0x91, 0xfb, 0xc4, 0xde, 0xa9,
	0x3d, 0x24, 0xd2, 0x3e, 0x21, 0xd2, 0x53, 0x19, 0xe8, 0x3d, 0x98, 0x9c, 0x8e, 0xf7, 0x74, 0xde,
	0x91, 0xad, 0x64, 0xd9, 0x5b, 0x1a, 0x4a, 0x59, 0xf6, 0x19, 0xe5, 0x17, 0x94, 0x7b, 0xd5, 0x85,
	0x47, 0x97, 0x2b, 0x2a, 0xa4, 0x67, 0x72, 0xaa, 0xe4, 0xc4, 0x44, 0xc8, 0x71, 0xb7, 0x90, 0xa3,
	0x62, 0xfc, 0xf8, 0x9a, 0x68, 0xa1, 0x28, 0x12, 0x04, 0x7c, 0x23, 0x5a, 0xc5, 0x35, 0x75, 0x1c,
	0xd1, 0x54, 0xde, 0x32, 0x1a, 0x8e, 0xae, 0x51, 0x02, 0x1d, 0xc3, 0x3e, 0x51, 0xf1, 0x8c, 0x05,
	0x9a, 0x1c, 0xb9, 0x4f, 0x77, 0x4f, 0x6c, 0xeb, 0xd4, 0xd3, 0xc0, 0x1b, 0x90, 0x22, 0xa8, 0xe4,
	0x98, 0x5b, 0x72, 0xee, 0xc1, 0xa0, 0xe4, 0xd0, 0x01, 0x98, 0x65, 0xed, 0xa1, 0x67, 0xb2, 0x00,
	0x0f, 0xa0, 0x37, 0x4d, 0x72, 0xb9, 0xc6, 0x0f, 0x61, 0x7f, 0x9a, 0x4a, 0xf5, 0x14, 0x37, 0x8b,
	0x85, 0xea, 0x5e, 0xe0, 0x21, 0x0c, 0xa6, 0x97, 0x4c, 0xcd, 0x55, 0x87, 0x02, 0xbf, 0x83, 0xe1,
	0x69, 0x1a, 0x66, 0x3c, 0x51, 0x25, 0xee, 0xc3, 0x50, 0xb7, 0xfc, 0x52, 0xd7, 0xa9, 0x0f, 0x54,
	0x83, 0xaf, 0xf4, 0x52, 0x6e, 0x44, 0xaa, 0x18, 0x3f, 0xaa, 0xd3, 0x45, 0x05, 0x18, 0x57, 0x81,
	0x6f, 0x79, 0x40, 0x24, 0x6d, 0x01, 0x2c, 0x6f, 0x02, 0xdc, 0x7f, 0x06, 0xf4, 0x3e, 0x67, 0xbe,
	0xbf, 0x46, 0x09, 0x8c, 0xb6, 0xd6, 0x88, 0x9e, 0x37, 0xbc, 0xf2, 0x55, 0x9f, 0x5a, 0x77, 0xc2,
	0x05, 0xee, 0xd4, 0xed, 0xf4, 0x13, 0xb4, 0x6c, 0xb7, 0xf1, 0x8e, 0x75, 0x27, 0x5c, 0xe0, 0x8e,
	0xfb, 0xc7, 0x84, 0x5e, 0x31, 0xd8, 0x2f, 0xe8, 0xe9, 0xad, 0xa1, 0x67, 0x0d, 0x35, 0x36, 0xbb,
	0xb7, 0x5a, 0x82, 0x6a, 0xaa, 0x1f, 0xd0, 0x55, 0xbb, 0x47, 0x4d, 0x1e, 0x2d, 0xbd, 0x62, 0xb5,
	0xe3, 0x54, 0x65, 0x1f, 0xfa, 0x85, 0x17, 0xd0, 0xa4, 0x21, 0xa7, 0x72, 0x9c, 0xd5, 0x96, 0x14,
	0xb8, 0x33, 0x31, 0x8e, 0x0c, 0x97, 0x41, 0xaf, 0xd8, 0xc6, 0x6f, 0xe8, 0x17, 0xb6, 0x69, 0x6c,
	0x56, 0xb9, 0xcb, 0x6a, 0x4b, 0xea, 0x66, 0x1f, 0x3e, 0xfd, 0x3c, 0x69, 0xfb, 0x51, 0x7d, 0xb3,
	0xb3, 0xae, 0xdf, 0xd7, 0xbf, 0x2f, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x20, 0x76, 0xa7, 0x9b,
	0xfb, 0x05, 0x00, 0x00,
}
